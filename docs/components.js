module.exports = {
    components: {
      securitySchemes: {
        bearerAuth: {
          type: "apiKey",
          scheme: "bearer",
          in: "header",
          name: 'x-token',
          bearerFormat: "JWT"
        }
      },
      schemas: {
        // id model
        id: {
          type: "string", // data type
          description: "ID generated by MongoDB", // desc
          example: "612f99a3cd4f49e7bbaf256e", // example of an id
        },
        // todo model
        User: {
          type: "object", // data type
          properties: {
            id: {
              type: "string", // data-type
              description: "ID generated by MongoDB", // desc
              example: "612f99a3cd4f49e7bbaf256e", // example of an id
            },
            name: {
              type: "string", // data-type
              description: "The user name", // desc
              example: "John Doe", // example of a title
            },
            email: {
              type: "string", // data-type
              description: "The user email", // desc
              example: "johndoe@email.com", // example of a title
            },
            password: {
              type: "string", // data-type
              description: "The user password", // desc
              example: "123456", // example of a title
            },
            img: {
              type: "string", // data-type
              description: "The user profile img", // desc
              example: "https://st.depositphotos.com/2101611/3925/v/600/depositphotos_39258143-stock-illustration-businessman-avatar-profile-picture.jpg", // example of a title
            },
            role: {
              type: "string", // data-type
              description: "The user role", // desc
              example: "USER_ROLE", // example of a title
            },
            status: {
              type: "boolean", // data type
              description: "The status of the user", // desc
              example: true, // example of a completed value
            },
            google: {
              type: "boolean", // data type
              description: "When user sign up with google", // desc
              example: true, // example of a completed value
            },
          },
        },
        //Category model
        Category: {
          type: "object", // data type
          properties: {
            name: {
              type: "string", // data-type
              description: "The category name", // desc
              example: "Cookies", // example of a title
            },
            status: {
              type: "boolean", // data-type
              description: "The status of the category", // desc
              example: true, // example of a title
            },
            createdBy: {
              type: "object", // data-type
              properties: {
                name: {
                  type: "string",
                  description: "User who created the category",
                  example: "John Doe"
                },
                _id: {
                  type: "string",
                  description: "ID generated by MongoDB", // desc
                  example: "612f99a3cd4f49e7bbaf256e", // example of an id
                },
              },
            },
          },
        },
        //Product model
        Product: {
          type: "object", // data type
          properties: {
            name: {
              type: "string", // data-type
              description: "The product name", // desc
              example: "Oreo", // example of a title
            },
            status: {
              type: "boolean", // data-type
              description: "The status of the product", // desc
              example: true, // example of a title
            },
            createdBy: {
              type: "object", // data-type
              properties: {
                name: {
                  type: "string",
                  description: "User who created the product",
                  example: "John Doe"
                },
                _id: {
                  type: "string",
                  description: "ID generated by MongoDB", // desc
                  example: "612f99a3cd4f49e7bbaf256e", // example of an id
                },
              },
            },
            price: {
              type: "number", // data-type
              description: "The product price", // desc
              example: 2, // example of a title
            },
            category: {
              type: "object", // data-type
              properties: {
                name: {
                  type: "string",
                  description: "Category where the product belongs",
                  example: "John Doe"
                },
                _id: {
                  type: "string",
                  description: "ID generated by MongoDB", // desc
                  example: "612f99a3cd4f49e7bbaf256e", // example of an id
                },
              },
            },
            img: {
              type: "string", // data-type
              description: "The user profile img", // desc
              example: "https://target.scene7.com/is/image/Target/GUEST_df817e08-791e-492f-851b-4ad88cb94730", // example of a title
            },
            description: {
              type: "string", // data-type
              description: "The Product description", // desc
              example: "Sandwich cookie consisting of two wafers with a sweet crème filling", // example of a title
            },
            available: {
              type: "boolean", // data-type
              description: "the product availability", // desc
              example: true, // example of a title
            },
          },
        },
        // create new user model
        UserInput: {
          type: "object", // data type
          properties: {
            name: {
              type: "string", // data-type
              description: "The user name", // desc
              example: "John Doe", // example of a title
            },
            email: {
              type: "string", // data-type
              description: "The user email", // desc
              example: "johndoe@email.com", // example of a title
            },
            password: {
              type: "string", // data-type
              description: "The user password", // desc
              example: "123456", // example of a title
            },
          },
        },
        // create new category model
        CategoryInput: {
          type: "object", // data type
          properties: {
            name: {
              type: "string", // data-type
              description: "The Category name", // desc
              example: "COOKIES", // example of a title
            },
          },
        },
        // create new product model
        ProductInput: {
          type: "object", // data type
          properties: {
            name: {
              type: "string", // data-type
              description: "The Product name", // desc
              example: "OREO", // example of a title
            },
            description: {
              type: "string", // data-type
              description: "The Product description", // desc
              example: "Sandwich cookie consisting of two wafers with a sweet crème filling", // example of a title
            },
            price: {
              type: "number", // data-type
              description: "The product price", // desc
              example: 2, // example of a title
            },
            category: {
              type: "string", // data-type
              description: "The category ID", // desc
              example: "612f99a3cd4f49e7bbaf256e", // example of a title
            },
            available: {
              type: "boolean", // data-type
              description: "the product availability", // desc
              example: true, // example of a title
            },
          },
        },
        // error model
        Error: {
          type: "object", //data type
          properties: {
            message: {
              type: "string", // data type
              description: "Error message", // desc
              example: "Not found", // example of an error message
            },
            internal_code: {
              type: "string", // data type
              description: "Error internal code", // desc
              example: "Invalid parameters", // example of an error internal code
            },
          },
        },
      },
    },
  };